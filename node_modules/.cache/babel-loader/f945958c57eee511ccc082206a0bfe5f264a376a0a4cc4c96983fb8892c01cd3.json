{"ast":null,"code":"import axios from'axios';import{getAuthToken}from'../utils/auth';const API_URL='/api/briefs';const getHeaders=()=>({'Authorization':\"Bearer \".concat(getAuthToken()),'Content-Type':'application/json'});export const fetchBriefs=async()=>{try{console.log('Fetching briefs...');const response=await axios.get(API_URL,{headers:getHeaders()});console.log('Briefs fetched successfully:',response.data);return response.data;}catch(error){console.error('Error fetching briefs:',error);if(axios.isAxiosError(error)){var _error$response,_error$response2;console.error('Response data:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);console.error('Status:',(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status);}throw error;}};export const createBrief=async briefData=>{try{console.log('Creating brief with data:',briefData);const response=await axios.post(API_URL,briefData,{headers:getHeaders()});console.log('Brief created successfully:',response.data);return response.data;}catch(error){console.error('Error creating brief:',error);if(axios.isAxiosError(error)){var _error$response3,_error$response4,_error$response5,_error$response6,_error$response6$data;console.error('Response data:',(_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.data);console.error('Status:',(_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status);if(((_error$response5=error.response)===null||_error$response5===void 0?void 0:_error$response5.status)===401){throw new Error('Unauthorized. Please log in again.');}if((_error$response6=error.response)!==null&&_error$response6!==void 0&&(_error$response6$data=_error$response6.data)!==null&&_error$response6$data!==void 0&&_error$response6$data.message){throw new Error(error.response.data.message);}}throw error;}};export const updateBriefStatus=async(briefId,status)=>{try{console.log(\"Updating brief \".concat(briefId,\" status to \").concat(status));const response=await axios.patch(\"\".concat(API_URL,\"/\").concat(briefId,\"/status\"),{status},{headers:getHeaders()});console.log('Brief status updated successfully:',response.data);return response.data;}catch(error){console.error('Error updating brief status:',error);if(axios.isAxiosError(error)){var _error$response7,_error$response8,_error$response9,_error$response0,_error$response0$data;console.error('Response data:',(_error$response7=error.response)===null||_error$response7===void 0?void 0:_error$response7.data);console.error('Status:',(_error$response8=error.response)===null||_error$response8===void 0?void 0:_error$response8.status);if(((_error$response9=error.response)===null||_error$response9===void 0?void 0:_error$response9.status)===401){throw new Error('Unauthorized. Please log in again.');}if((_error$response0=error.response)!==null&&_error$response0!==void 0&&(_error$response0$data=_error$response0.data)!==null&&_error$response0$data!==void 0&&_error$response0$data.message){throw new Error(error.response.data.message);}}throw error;}};","map":{"version":3,"names":["axios","getAuthToken","API_URL","getHeaders","concat","fetchBriefs","console","log","response","get","headers","data","error","isAxiosError","_error$response","_error$response2","status","createBrief","briefData","post","_error$response3","_error$response4","_error$response5","_error$response6","_error$response6$data","Error","message","updateBriefStatus","briefId","patch","_error$response7","_error$response8","_error$response9","_error$response0","_error$response0$data"],"sources":["/Users/adambrown/Desktop/Netwrkly/src/netwrkly/frontend/src/services/briefService.ts"],"sourcesContent":["import axios from 'axios';\nimport { Brief, CreateBriefData } from '../types/brief';\nimport { getAuthToken } from '../utils/auth';\n\nconst API_URL = '/api/briefs';\n\nconst getHeaders = () => ({\n    'Authorization': `Bearer ${getAuthToken()}`,\n    'Content-Type': 'application/json'\n});\n\nexport const fetchBriefs = async (): Promise<Brief[]> => {\n    try {\n        console.log('Fetching briefs...');\n        const response = await axios.get(API_URL, {\n            headers: getHeaders()\n        });\n        console.log('Briefs fetched successfully:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching briefs:', error);\n        if (axios.isAxiosError(error)) {\n            console.error('Response data:', error.response?.data);\n            console.error('Status:', error.response?.status);\n        }\n        throw error;\n    }\n};\n\nexport const createBrief = async (briefData: CreateBriefData): Promise<Brief> => {\n    try {\n        console.log('Creating brief with data:', briefData);\n        const response = await axios.post(API_URL, briefData, {\n            headers: getHeaders()\n        });\n        console.log('Brief created successfully:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Error creating brief:', error);\n        if (axios.isAxiosError(error)) {\n            console.error('Response data:', error.response?.data);\n            console.error('Status:', error.response?.status);\n            if (error.response?.status === 401) {\n                throw new Error('Unauthorized. Please log in again.');\n            }\n            if (error.response?.data?.message) {\n                throw new Error(error.response.data.message);\n            }\n        }\n        throw error;\n    }\n};\n\nexport const updateBriefStatus = async (briefId: number, status: Brief['status']): Promise<Brief> => {\n    try {\n        console.log(`Updating brief ${briefId} status to ${status}`);\n        const response = await axios.patch(`${API_URL}/${briefId}/status`, { status }, {\n            headers: getHeaders()\n        });\n        console.log('Brief status updated successfully:', response.data);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating brief status:', error);\n        if (axios.isAxiosError(error)) {\n            console.error('Response data:', error.response?.data);\n            console.error('Status:', error.response?.status);\n            if (error.response?.status === 401) {\n                throw new Error('Unauthorized. Please log in again.');\n            }\n            if (error.response?.data?.message) {\n                throw new Error(error.response.data.message);\n            }\n        }\n        throw error;\n    }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}