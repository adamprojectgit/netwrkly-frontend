{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{creatorProfileService}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const CreatorProfileContext=/*#__PURE__*/createContext(undefined);export const CreatorProfileProvider=_ref=>{let{children}=_ref;const[profile,setProfile]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const loadProfile=async()=>{try{setIsLoading(true);const data=await creatorProfileService.getProfile();setProfile(data);}catch(err){setError(new Error(err.message||'Error loading profile'));}finally{setIsLoading(false);}};useEffect(()=>{loadProfile();},[]);const updateProfile=async data=>{try{setIsLoading(true);const updatedProfile=await creatorProfileService.updateProfile(data);setProfile(updatedProfile);}catch(err){setError(new Error(err.message||'Error updating profile'));throw err;}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(CreatorProfileContext.Provider,{value:{profile,isLoading,error,updateProfile},children:children});};export const useCreatorProfile=()=>{const context=useContext(CreatorProfileContext);if(context===undefined){throw new Error('useCreatorProfile must be used within a CreatorProfileProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","creatorProfileService","jsx","_jsx","CreatorProfileContext","undefined","CreatorProfileProvider","_ref","children","profile","setProfile","isLoading","setIsLoading","error","setError","loadProfile","data","getProfile","err","Error","message","updateProfile","updatedProfile","Provider","value","useCreatorProfile","context"],"sources":["/Users/adambrown/Desktop/Netwrkly/src/netwrkly/frontend/src/contexts/CreatorProfileContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { creatorProfileService } from '../services/api';\n\ninterface CreatorProfile {\n    id: number;\n    bio?: string;\n    location?: string;\n    website?: string;\n    userId: number;\n    createdAt: string;\n    updatedAt: string;\n}\n\ninterface CreatorProfileContextType {\n    profile: CreatorProfile | null;\n    isLoading: boolean;\n    error: Error | null;\n    updateProfile: (data: Partial<CreatorProfile>) => Promise<void>;\n}\n\nconst CreatorProfileContext = createContext<CreatorProfileContextType | undefined>(undefined);\n\nexport const CreatorProfileProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n    const [profile, setProfile] = useState<CreatorProfile | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<Error | null>(null);\n\n    const loadProfile = async () => {\n        try {\n            setIsLoading(true);\n            const data = await creatorProfileService.getProfile();\n            setProfile(data);\n        } catch (err: any) {\n            setError(new Error(err.message || 'Error loading profile'));\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        loadProfile();\n    }, []);\n\n    const updateProfile = async (data: Partial<CreatorProfile>) => {\n        try {\n            setIsLoading(true);\n            const updatedProfile = await creatorProfileService.updateProfile(data);\n            setProfile(updatedProfile);\n        } catch (err: any) {\n            setError(new Error(err.message || 'Error updating profile'));\n            throw err;\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <CreatorProfileContext.Provider value={{ profile, isLoading, error, updateProfile }}>\n            {children}\n        </CreatorProfileContext.Provider>\n    );\n};\n\nexport const useCreatorProfile = () => {\n    const context = useContext(CreatorProfileContext);\n    if (context === undefined) {\n        throw new Error('useCreatorProfile must be used within a CreatorProfileProvider');\n    }\n    return context;\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,qBAAqB,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAmBxD,KAAM,CAAAC,qBAAqB,cAAGP,aAAa,CAAwCQ,SAAS,CAAC,CAE7F,MAAO,MAAM,CAAAC,sBAA+D,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxF,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAwB,IAAI,CAAC,CACnE,KAAM,CAACY,SAAS,CAAEC,YAAY,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAe,IAAI,CAAC,CAEtD,KAAM,CAAAgB,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACAH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAf,qBAAqB,CAACgB,UAAU,CAAC,CAAC,CACrDP,UAAU,CAACM,IAAI,CAAC,CACpB,CAAE,MAAOE,GAAQ,CAAE,CACfJ,QAAQ,CAAC,GAAI,CAAAK,KAAK,CAACD,GAAG,CAACE,OAAO,EAAI,uBAAuB,CAAC,CAAC,CAC/D,CAAC,OAAS,CACNR,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAEDZ,SAAS,CAAC,IAAM,CACZe,WAAW,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,aAAa,CAAG,KAAO,CAAAL,IAA6B,EAAK,CAC3D,GAAI,CACAJ,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAU,cAAc,CAAG,KAAM,CAAArB,qBAAqB,CAACoB,aAAa,CAACL,IAAI,CAAC,CACtEN,UAAU,CAACY,cAAc,CAAC,CAC9B,CAAE,MAAOJ,GAAQ,CAAE,CACfJ,QAAQ,CAAC,GAAI,CAAAK,KAAK,CAACD,GAAG,CAACE,OAAO,EAAI,wBAAwB,CAAC,CAAC,CAC5D,KAAM,CAAAF,GAAG,CACb,CAAC,OAAS,CACNN,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,mBACIT,IAAA,CAACC,qBAAqB,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEf,OAAO,CAAEE,SAAS,CAAEE,KAAK,CAAEQ,aAAc,CAAE,CAAAb,QAAA,CAC/EA,QAAQ,CACmB,CAAC,CAEzC,CAAC,CAED,MAAO,MAAM,CAAAiB,iBAAiB,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,OAAO,CAAG5B,UAAU,CAACM,qBAAqB,CAAC,CACjD,GAAIsB,OAAO,GAAKrB,SAAS,CAAE,CACvB,KAAM,IAAI,CAAAc,KAAK,CAAC,gEAAgE,CAAC,CACrF,CACA,MAAO,CAAAO,OAAO,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}